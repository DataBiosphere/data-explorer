# coding: utf-8

from __future__ import absolute_import
from data_explorer.models.facet import Facet
from .base_model_ import Model
from datetime import date, datetime
from typing import List, Dict
from ..util import deserialize_model


class FacetsResponse(Model):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """
    def __init__(self, facets=None, count=None):
        """
        FacetsResponse - a model defined in Swagger

        :param facets: The facets of this FacetsResponse.
        :type facets: List[Facet]
        :param count: The count of this FacetsResponse.
        :type count: int
        """
        self.swagger_types = {
            'facets': List[Facet],
            'count': int
        }

        self.attribute_map = {
            'facets': 'facets',
            'count': 'count'
        }

        self._facets = facets
        self._count = count

    @classmethod
    def from_dict(cls, dikt):
        """
        Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The FacetsResponse of this FacetsResponse.
        :rtype: FacetsResponse
        """
        return deserialize_model(dikt, cls)

    @property
    def facets(self):
        """
        Gets the facets of this FacetsResponse.

        :return: The facets of this FacetsResponse.
        :rtype: List[Facet]
        """
        return self._facets

    @facets.setter
    def facets(self, facets):
        """
        Sets the facets of this FacetsResponse.

        :param facets: The facets of this FacetsResponse.
        :type facets: List[Facet]
        """

        self._facets = facets

    @property
    def count(self):
        """
        Gets the count of this FacetsResponse.
        Number of entities represented by current facet selection. For example, this could be 40, representing 40 people. 

        :return: The count of this FacetsResponse.
        :rtype: int
        """
        return self._count

    @count.setter
    def count(self, count):
        """
        Sets the count of this FacetsResponse.
        Number of entities represented by current facet selection. For example, this could be 40, representing 40 people. 

        :param count: The count of this FacetsResponse.
        :type count: int
        """

        self._count = count


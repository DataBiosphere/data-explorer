# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from data_explorer.models.base_model_ import Model
from data_explorer import util


class DatasetResponse(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self,
                 name=None,
                 search_placeholder_text=None,
                 enable_search_values=None,
                 show_viz_toggle=None):  # noqa: E501
        """DatasetResponse - a model defined in Swagger

        :param name: The name of this DatasetResponse.  # noqa: E501
        :type name: str
        :param search_placeholder_text: The search_placeholder_text of this DatasetResponse.  # noqa: E501
        :type search_placeholder_text: str
        :param enable_search_values: The enable_search_values of this DatasetResponse.  # noqa: E501
        :type enable_search_values: bool
        :param show_viz_toggle: The show_viz_toggle of this DatasetResponse.  # noqa: E501
        :type show_viz_toggle: bool
        """
        self.swagger_types = {
            'name': str,
            'search_placeholder_text': str,
            'enable_search_values': bool,
            'show_viz_toggle': bool
        }

        self.attribute_map = {
            'name': 'name',
            'search_placeholder_text': 'search_placeholder_text',
            'enable_search_values': 'enable_search_values',
            'show_viz_toggle': 'show_viz_toggle'
        }

        self._name = name
        self._search_placeholder_text = search_placeholder_text
        self._enable_search_values = enable_search_values
        self._show_viz_toggle = show_viz_toggle

    @classmethod
    def from_dict(cls, dikt):
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The DatasetResponse of this DatasetResponse.  # noqa: E501
        :rtype: DatasetResponse
        """
        return util.deserialize_model(dikt, cls)

    @property
    def name(self):
        """Gets the name of this DatasetResponse.


        :return: The name of this DatasetResponse.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this DatasetResponse.


        :param name: The name of this DatasetResponse.
        :type name: str
        """

        self._name = name

    @property
    def search_placeholder_text(self):
        """Gets the search_placeholder_text of this DatasetResponse.

        Optional. What to show in the search box by default  # noqa: E501

        :return: The search_placeholder_text of this DatasetResponse.
        :rtype: str
        """
        return self._search_placeholder_text

    @search_placeholder_text.setter
    def search_placeholder_text(self, search_placeholder_text):
        """Sets the search_placeholder_text of this DatasetResponse.

        Optional. What to show in the search box by default  # noqa: E501

        :param search_placeholder_text: The search_placeholder_text of this DatasetResponse.
        :type search_placeholder_text: str
        """

        self._search_placeholder_text = search_placeholder_text

    @property
    def enable_search_values(self):
        """Gets the enable_search_values of this DatasetResponse.


        :return: The enable_search_values of this DatasetResponse.
        :rtype: bool
        """
        return self._enable_search_values

    @enable_search_values.setter
    def enable_search_values(self, enable_search_values):
        """Sets the enable_search_values of this DatasetResponse.


        :param enable_search_values: The enable_search_values of this DatasetResponse.
        :type enable_search_values: bool
        """

        self._enable_search_values = enable_search_values

    @property
    def show_viz_toggle(self):
        """Gets the show_viz_toggle of this DatasetResponse.


        :return: The show_viz_toggle of this DatasetResponse.
        :rtype: bool
        """
        return self._show_viz_toggle

    @show_viz_toggle.setter
    def show_viz_toggle(self, show_viz_toggle):
        """Sets the show_viz_toggle of this DatasetResponse.


        :param show_viz_toggle: The show_viz_toggle of this DatasetResponse.
        :type show_viz_toggle: bool
        """

        self._show_viz_toggle = show_viz_toggle

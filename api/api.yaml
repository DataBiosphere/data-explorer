swagger: '2.0'
info:
  title: Data Explorer Service
  description: API Service that reads from Elasticsearch.
  license:
    name: BSD
    url: 'http://opensource.org/licenses/BSD-3-Clause'
  version: '0.0.1'
paths:
  /facets:
    get:
      description: Returns facets.
      parameters:
        - name: filter
          # Ideally this query parameter would use an object. However, OpenAPI
          # 2.0 doesn't support objects in query parameters
          # (https://swagger.io/docs/specification/2-0/describing-parameters/#faq)
          # In order to use OpenAPI 3.0, I would need swagger-codegen 3.0.0. I
          # had trouble getting swagger-codegen 3.0.0 to work
          # (https://github.com/swagger-api/swagger-codegen/issues/7891).
          # TODO: After swagger-codegen 3.0 is GA, try again.
          # Another alternative is to change GET to POST, since POST bodies can
          # have objects. I prefer GET because they're much easier to test.
          # One can load localhost:8390/api/facets?filter=Gender=female, instead
          # of:
          # - Load Swagger UI at localhost:8390/api/ui
          # - Click on Try it out
          # - Enter filter body. Make sure braces are correct
          # - Click Execute
          description: >
            filter represents selected facet values. Elasticsearch query will
            be run only over selected facet values. filter is an array of
            strings, where each string has the format "facetName=facetValue".
            Example url /facets?filter=Gender=female,Region=northwest,Region=southwest
          in: query
          type: array
          items:
            type: string
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/FacetsResponse'
      tags:
        # Put in facets_controller.py instead of default_controller.py.
        - Facets
definitions:
  FacetsResponse:
    description: "Results from a faceted search."
    properties:
      facets:
        type: array
        items:
          $ref: '#/definitions/Facet'
      count:
        type: integer
        description: >
          Number of entities represented by current facet selection. For
          example, this could be 40, representing 40 people.
  Facet:
    description: >
      A facet. For example, the Gender facet would include the facet name
      "Gender", as well as counts for all possible values.
    properties:
      name:
        type: string
        description: Facet name, for example, "Gender".
      values:
        type: array
        items:
          $ref: '#/definitions/FacetValue'
  FacetValue:
    description: A facet value, for example, "Male"/34.
    properties:
      name:
        type: string
        description: Facet value name, for example, "Male".
      count:
        type: integer
        description: Facet value count.


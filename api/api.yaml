swagger: '2.0'
info:
  title: Data Explorer Service
  description: API Service that reads from Elasticsearch.
  license:
    name: BSD
    url: 'http://opensource.org/licenses/BSD-3-Clause'
  version: '0.0.1'
paths:
  /dataset:
    get:
      description: Gets dataset information, such as name.
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/DatasetResponse'
      tags:
        # Put in dataset_controller.py instead of default_controller.py.
        - Dataset
  /facets:
    get:
      description: Returns facets.
      parameters:
        - name: filter
          # Unfortunately OpenAPI 2.0 doesn't allow objects in GET query
          # parameters. So hardcode something like "Gender=female".
          # TODO(#32): Investigate switching to OpenAPI 3.0.
          description: >
            filter represents selected facet values. Elasticsearch query will
            be run only over selected facet values. filter is an array of
            strings, where each string has the format "facetName=facetValue".
            Example url /facets?filter=Gender=female,Region=northwest,Region=southwest
          in: query
          type: array
          # Default collectionFormat is csv. With csv, faceted search doesn't
          # work when facet value has a comma. So switch to pipes; pipe in facet
          # value is much more rare.
          collectionFormat: pipes
          items:
            type: string
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/FacetsResponse'
      tags:
        # Put in facets_controller.py instead of default_controller.py.
        - Facets
definitions:
  DatasetResponse:
    description: "Dataset information."
    properties:
      name:
        type: string
      tableNames:
        description: "Fully-qualified table name: <project id>.<dataset id>.<table name>"
        type: array
        items:
          type: string
  FacetsResponse:
    description: "Results from a faceted search."
    properties:
      facets:
        type: array
        items:
          $ref: '#/definitions/Facet'
      count:
        type: integer
        description: >
          Number of entities represented by current facet selection. For
          example, this could be 40, representing 40 people.
  Facet:
    description: >
      A facet. For example, the Gender facet would include the facet name
      "Gender", as well as counts for all possible values.
    properties:
      name:
        type: string
        description: Facet name, for example, "Gender".
      description:
        type: string
        description: Optional facet description.
      values:
        type: array
        items:
          $ref: '#/definitions/FacetValue'
  FacetValue:
    description: A facet value, for example, "Male"/34.
    properties:
      name:
        type: string
        description: Facet value name, for example, "Male".
      count:
        type: integer
        description: Facet value count.


/**
 * Data Explorer Service
 * API Service that reads from Elasticsearch.
 *
 * OpenAPI spec version: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */


import ApiClient from '../ApiClient';





/**
* The Facet model module.
* @module model/Facet
* @version 0.0.1
*/
export default class Facet {
    /**
    * Constructs a new <code>Facet</code>.
    * A facet. For example, the Gender facet would include the facet name \&quot;Gender\&quot;, as well as counts for all possible values. 
    * @alias module:model/Facet
    * @class
    */

    constructor() {
        

        
        

        

        
    }

    /**
    * Constructs a <code>Facet</code> from a plain JavaScript object, optionally creating a new instance.
    * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
    * @param {Object} data The plain JavaScript object bearing properties of interest.
    * @param {module:model/Facet} obj Optional instance to populate.
    * @return {module:model/Facet} The populated <code>Facet</code> instance.
    */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Facet();

            
            
            

            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('es_field_name')) {
                obj['es_field_name'] = ApiClient.convertToType(data['es_field_name'], 'String');
            }
            if (data.hasOwnProperty('es_field_type')) {
                obj['es_field_type'] = ApiClient.convertToType(data['es_field_type'], 'String');
            }
            if (data.hasOwnProperty('value_names')) {
                obj['value_names'] = ApiClient.convertToType(data['value_names'], ['String']);
            }
            if (data.hasOwnProperty('value_counts')) {
                obj['value_counts'] = ApiClient.convertToType(data['value_counts'], ['Number']);
            }
            if (data.hasOwnProperty('time_names')) {
                obj['time_names'] = ApiClient.convertToType(data['time_names'], ['String']);
            }
            if (data.hasOwnProperty('time_series_value_counts')) {
                obj['time_series_value_counts'] = ApiClient.convertToType(data['time_series_value_counts'], [['Number']]);
            }
        }
        return obj;
    }

    /**
    * Facet name, for example, \"Gender\".
    * @member {String} name
    */
    name = undefined;
    /**
    * Optional facet description.
    * @member {String} description
    */
    description = undefined;
    /**
    * The Elasticsearch field name.
    * @member {String} es_field_name
    */
    es_field_name = undefined;
    /**
    * The Elasticsearch field type.
    * @member {String} es_field_type
    */
    es_field_type = undefined;
    /**
    * Array of names of possible facet values. 
    * @member {Array.<String>} value_names
    */
    value_names = undefined;
    /**
    * Array of counts for each facet value.
    * @member {Array.<Number>} value_counts
    */
    value_counts = undefined;
    /**
    * Array of times.
    * @member {Array.<String>} time_names
    */
    time_names = undefined;
    /**
    * 2-dimensional array of facet value counts, indexed by time then value; indexes correspond to time_names and then value_names. 
    * @member {Array.<Array.<Number>>} time_series_value_counts
    */
    time_series_value_counts = undefined;








}


